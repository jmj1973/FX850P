@inject NavigationManager _navigationManager

@code {
    [CascadingParameter]
    private Task<AuthenticationState> AuthenticationStateTask { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        //NavigationManager.NavigateTo($"Account/Login?returnUrl={Uri.EscapeDataString(NavigationManager.Uri)}", forceLoad: true);

        var authenticationState = await AuthenticationStateTask;

        if (authenticationState?.User?.Identity is null || !authenticationState.User.Identity.IsAuthenticated)
        {
            var returnUrl = _navigationManager.ToBaseRelativePath(_navigationManager.Uri);

            if (string.IsNullOrWhiteSpace(returnUrl))
                returnUrl = "%2F";

            _navigationManager.NavigateTo($"Account/Login?ReturnUrl={returnUrl}", forceLoad: true);
        }

    }
}
